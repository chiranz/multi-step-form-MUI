{"version":3,"sources":["components/Step.js","components/FormUserDetails.js","components/FormPersonalDetails.js","components/Confirm.js","components/Success.js","components/CurrentForm.js","components/UserForm.js","App.js","serviceWorker.js","index.js"],"names":["Step","background","color","steps","currentStep","tickMark","style","display","justifyContent","width","margin","map","step","i","backgroundColor","height","borderRadius","alignItems","fontSize","FormUserDetails","handleNext","values","firstName","lastName","email","actions","setFirstName","setLastName","setEmail","console","log","TextField","placeholder","label","onChange","e","target","value","defaultValue","Button","variant","onClick","FormPersonalDetails","handleBack","setCity","setOccupation","setBio","city","occupation","bio","Confirm","Success","flexDirection","CurrentForm","useState","UserForm","setStep","preventDefault","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","App","classes","AppBar","position","Toolbar","IconButton","edge","className","aria-label","Typography","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.72bbaa62.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Step({ steps, currentStep }) {\n  let background;\n  let color;\n  const tickMark = <>&#x2714;</>;\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        width: \"200px\",\n        margin: \"2em 0\"\n      }}\n    >\n      {steps.map((step, i) => {\n        background =\n          currentStep === i + 1\n            ? \"blue\"\n            : currentStep > i + 1\n            ? \"green\"\n            : \"#dddddd\";\n        color = currentStep >= i + 1 ? \"#ffffff\" : \"#666666\";\n        return (\n          <div\n            style={{\n              color: color,\n              backgroundColor: background,\n              width: \"30px\",\n              height: \"30px\",\n              borderRadius: \"50%\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              fontSize: \"1.2rem\"\n            }}\n          >\n            {step < currentStep ? tickMark : step}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function FormUserDetails({\n  handleNext,\n  values: { firstName, lastName, email },\n  actions: { setFirstName, setLastName, setEmail }\n}) {\n  console.log(firstName);\n  return (\n    <>\n      <h3>Enter user details</h3>\n      <TextField\n        placeholder=\"Enter your first name\"\n        label=\"First Name\"\n        onChange={e => setFirstName(e.target.value)}\n        defaultValue={firstName}\n      />\n      <br />\n      <TextField\n        placeholder=\"Enter your last name\"\n        label=\"Last Name\"\n        onChange={e => setLastName(e.target.value)}\n        defaultValue={lastName}\n      />\n      <br />\n      <TextField\n        placeholder=\"Enter your email\"\n        label=\"Email\"\n        onChange={e => setEmail(e.target.value)}\n        defaultValue={email}\n      />\n      <br />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        style={{ margin: 15 }}\n        onClick={handleNext}\n      >\n        Continue\n      </Button>\n    </>\n  );\n}\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function FormPersonalDetails({\n  handleBack,\n  handleNext,\n  actions: { setCity, setOccupation, setBio },\n  values: { city, occupation, bio }\n}) {\n  return (\n    <>\n      <h3>Enter user details</h3>\n      <TextField\n        placeholder=\"Enter your city\"\n        label=\"City\"\n        onChange={e => setCity(e.target.value)}\n        defaultValue={city}\n      />\n      <br />\n      <TextField\n        placeholder=\"Enter your occupation\"\n        label=\"Occupation\"\n        onChange={e => setOccupation(e.target.value)}\n        defaultValue={occupation}\n      />\n      <br />\n      <TextField\n        placeholder=\"Enter your bio\"\n        label=\"Bio\"\n        onChange={e => setBio(e.target.value)}\n        defaultValue={bio}\n      />\n      <br />\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Button\n          variant=\"contained\"\n          color=\"default\"\n          style={{ margin: 15 }}\n          onClick={handleBack}\n        >\n          Back\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ margin: 15 }}\n          onClick={handleNext}\n        >\n          Continue\n        </Button>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function Confirm({\n  values: { firstName, lastName, email, city, occupation, bio },\n  handleBack,\n  handleNext\n}) {\n  return (\n    <>\n      <h4>{firstName}</h4>\n      <h4>{lastName}</h4>\n      <h4>{email}</h4>\n      <h4>{occupation}</h4>\n      <h4>{city}</h4>\n      <h4>{bio}</h4>\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Button\n          variant=\"contained\"\n          color=\"default\"\n          style={{ margin: 15 }}\n          onClick={handleBack}\n        >\n          Back\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ margin: 15 }}\n          onClick={handleNext}\n        >\n          Submit\n        </Button>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function Success() {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}\n    >\n      <h1>Submission Successful</h1>\n      <p>\n        Lorem, ipsum dolor sit amet consectetur adipisicing elit. Doloribus,\n        reprehenderit!\n      </p>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport FormUserDetails from \"./FormUserDetails\";\nimport FormPersonalDetails from \"./FormPersonalDetails\";\nimport Confirm from \"./Confirm\";\nimport Success from \"./Success\";\n\nexport default function CurrentForm({ step, handleNext, handleBack }) {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [occupation, setOccupation] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n\n  switch (step) {\n    case 1:\n      return (\n        <FormUserDetails\n          handleNext={handleNext}\n          actions={{ setFirstName, setLastName, setEmail }}\n          values={{ firstName, lastName, email }}\n        />\n      );\n    case 2:\n      return (\n        <FormPersonalDetails\n          handleBack={handleBack}\n          handleNext={handleNext}\n          actions={{ setCity, setOccupation, setBio }}\n          values={{ city, occupation, bio }}\n        />\n      );\n    case 3:\n      return (\n        <Confirm\n          handleBack={handleBack}\n          handleNext={handleNext}\n          values={{ firstName, lastName, email, city, occupation, bio }}\n        />\n      );\n    case 4:\n      return <Success />;\n    default:\n      return <FormUserDetails />;\n  }\n}\n","import React, { useState } from \"react\";\nimport Step from \"./Step\";\nimport CurrentForm from \"./CurrentForm\";\n\nexport default function UserForm() {\n  const [step, setStep] = useState(1);\n  const steps = [1, 2, 3];\n  // Proceed to the next step\n  const handleNext = e => {\n    e.preventDefault();\n    setStep(step => step + 1);\n  };\n  // Proceed to the previous step\n  const handleBack = e => {\n    e.preventDefault();\n    setStep(step => step - 1);\n  };\n\n  return (\n    <>\n      {step < 4 && <Step currentStep={step} steps={steps} />}\n      <CurrentForm\n        step={step}\n        handleBack={handleBack}\n        handleNext={handleNext}\n      />\n    </>\n  );\n}\n","import React from \"react\";\nimport UserForm from \"./components/UserForm\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\">\n            My AppBar\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexDirection: \"column\"\n        }}\n      >\n        <UserForm />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}